<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<w:document xmlns:wpc="http://schemas.microsoft.com/office/word/2010/wordprocessingCanvas" xmlns:cx="http://schemas.microsoft.com/office/drawing/2014/chartex" xmlns:cx1="http://schemas.microsoft.com/office/drawing/2015/9/8/chartex" xmlns:cx2="http://schemas.microsoft.com/office/drawing/2015/10/21/chartex" xmlns:cx3="http://schemas.microsoft.com/office/drawing/2016/5/9/chartex" xmlns:cx4="http://schemas.microsoft.com/office/drawing/2016/5/10/chartex" xmlns:cx5="http://schemas.microsoft.com/office/drawing/2016/5/11/chartex" xmlns:cx6="http://schemas.microsoft.com/office/drawing/2016/5/12/chartex" xmlns:cx7="http://schemas.microsoft.com/office/drawing/2016/5/13/chartex" xmlns:cx8="http://schemas.microsoft.com/office/drawing/2016/5/14/chartex" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:aink="http://schemas.microsoft.com/office/drawing/2016/ink" xmlns:am3d="http://schemas.microsoft.com/office/drawing/2017/model3d" xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:oel="http://schemas.microsoft.com/office/2019/extlst" xmlns:r="http://schemas.openxmlformats.org/officeDocument/2006/relationships" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math" xmlns:v="urn:schemas-microsoft-com:vml" xmlns:wp14="http://schemas.microsoft.com/office/word/2010/wordprocessingDrawing" xmlns:wp="http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing" xmlns:w10="urn:schemas-microsoft-com:office:word" xmlns:w="http://schemas.openxmlformats.org/wordprocessingml/2006/main" xmlns:w14="http://schemas.microsoft.com/office/word/2010/wordml" xmlns:w15="http://schemas.microsoft.com/office/word/2012/wordml" xmlns:w16cex="http://schemas.microsoft.com/office/word/2018/wordml/cex" xmlns:w16cid="http://schemas.microsoft.com/office/word/2016/wordml/cid" xmlns:w16="http://schemas.microsoft.com/office/word/2018/wordml" xmlns:w16du="http://schemas.microsoft.com/office/word/2023/wordml/word16du" xmlns:w16sdtdh="http://schemas.microsoft.com/office/word/2020/wordml/sdtdatahash" xmlns:w16sdtfl="http://schemas.microsoft.com/office/word/2024/wordml/sdtformatlock" xmlns:w16se="http://schemas.microsoft.com/office/word/2015/wordml/symex" xmlns:wpg="http://schemas.microsoft.com/office/word/2010/wordprocessingGroup" xmlns:wpi="http://schemas.microsoft.com/office/word/2010/wordprocessingInk" xmlns:wne="http://schemas.microsoft.com/office/word/2006/wordml" xmlns:wps="http://schemas.microsoft.com/office/word/2010/wordprocessingShape" mc:Ignorable="w14 w15 w16se w16cid w16 w16cex w16sdtdh w16sdtfl w16du wp14"><w:body><w:p w14:paraId="247BFDAC" w14:textId="00518630" w:rsidR="000E13AE" w:rsidRDefault="00A66EF0" w:rsidP="00A66EF0"><w:pPr><w:jc w:val="center"/></w:pPr><w:r><w:t>Program Specification: Transformation Logic</w:t></w:r></w:p><w:p w14:paraId="78B40AC1" w14:textId="3793CCF4" w:rsidR="00926DDB" w:rsidRDefault="00926DDB" w:rsidP="00926DDB"><w:r w:rsidRPr="00756F24"><w:rPr><w:b/><w:bCs/></w:rPr><w:t>LLM:</w:t></w:r><w:r><w:t xml:space="preserve"> GPT 5</w:t></w:r></w:p><w:p w14:paraId="0211B64C" w14:textId="77777777" w:rsidR="00FD78BE" w:rsidRDefault="00756F24" w:rsidP="00926DDB"><w:r w:rsidRPr="00756F24"><w:rPr><w:b/><w:bCs/></w:rPr><w:t>Context:</w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r></w:p><w:p w14:paraId="007B603A" w14:textId="7C8B4305" w:rsidR="00F461ED" w:rsidRDefault="00F461ED" w:rsidP="00926DDB"><w:r><w:t>I am an AI Prompt Engineer who will be translating input excel spreadsheets from one format to another.  Here are the requirements for the transformation.</w:t></w:r></w:p><w:p w14:paraId="30F349D3" w14:textId="77777777" w:rsidR="004C6FBD" w:rsidRDefault="002145D4" w:rsidP="004C6FBD"><w:pPr><w:pStyle w:val="ListParagraph"/><w:numPr><w:ilvl w:val="0"/><w:numId w:val="1"/></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Read in the input excel file.  We will produce a destination transformation dataframe.  The dataframe will have 17 columns.  </w:t></w:r></w:p><w:p w14:paraId="14547B3A" w14:textId="77777777" w:rsidR="004C6FBD" w:rsidRDefault="002145D4" w:rsidP="004C6FBD"><w:pPr><w:pStyle w:val="ListParagraph"/><w:numPr><w:ilvl w:val="0"/><w:numId w:val="1"/></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Column </w:t></w:r><w:r w:rsidR="00F461ED"><w:t>A</w:t></w:r><w:r><w:t xml:space="preserve"> will be a counter that</w:t></w:r><w:r w:rsidR="005A3C8A"><w:t xml:space="preserve"> </w:t></w:r><w:r><w:t>increment</w:t></w:r><w:r w:rsidR="005A3C8A"><w:t xml:space="preserve">s </w:t></w:r><w:r><w:t xml:space="preserve">by 1 based on the previous row’s counter value. </w:t></w:r></w:p><w:p w14:paraId="3C131D2C" w14:textId="77777777" w:rsidR="004C6FBD" w:rsidRDefault="00F461ED" w:rsidP="004C6FBD"><w:pPr><w:pStyle w:val="ListParagraph"/><w:numPr><w:ilvl w:val="0"/><w:numId w:val="1"/></w:numPr></w:pPr><w:r><w:t xml:space="preserve"> Column B will be today’s date.  </w:t></w:r></w:p><w:p w14:paraId="3BE5C779" w14:textId="72D3898E" w:rsidR="004C6FBD" w:rsidRDefault="00F461ED" w:rsidP="004C6FBD"><w:pPr><w:pStyle w:val="ListParagraph"/><w:numPr><w:ilvl w:val="0"/><w:numId w:val="1"/></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Column C will be the </w:t></w:r><w:r w:rsidR="00AC5ABE"><w:t xml:space="preserve">start </w:t></w:r><w:r><w:t>date</w:t></w:r><w:r w:rsidR="00AC5ABE"><w:t>.  This value is gathered</w:t></w:r><w:r><w:t xml:space="preserve"> from Column </w:t></w:r><w:r w:rsidR="00AA6706"><w:t>J</w:t></w:r><w:r><w:t xml:space="preserve"> of the input file.  </w:t></w:r></w:p><w:p w14:paraId="7CA9243C" w14:textId="7902EAB8" w:rsidR="004C6FBD" w:rsidRDefault="00F461ED" w:rsidP="004C6FBD"><w:pPr><w:pStyle w:val="ListParagraph"/><w:numPr><w:ilvl w:val="0"/><w:numId w:val="1"/></w:numPr></w:pPr><w:r><w:t>Column D will be the zone</w:t></w:r><w:r w:rsidR="004C6FBD"><w:t xml:space="preserve"> – the value for zone will be the word that proceeds the word zone in column E of the input file. </w:t></w:r><w:r w:rsidR="00B708F3"><w:t xml:space="preserve">This value will either be NORTH, SOUTH, WEST, </w:t></w:r><w:r w:rsidR="003C5D33"><w:t xml:space="preserve">If Houston then </w:t></w:r><w:r w:rsidR="00B708F3"><w:t>COAST</w:t></w:r><w:r w:rsidR="003C5D33"><w:t>, otherwise NA</w:t></w:r><w:r w:rsidR="002974B2"><w:t>.  The logic is as follows:</w:t></w:r></w:p><w:p w14:paraId="7B5A3274" w14:textId="562DC597" w:rsidR="002974B2" w:rsidRDefault="002974B2" w:rsidP="002974B2"><w:pPr><w:spacing w:after="0"/></w:pPr><w:r><w:t xml:space="preserve">if </w:t></w:r><w:r w:rsidR="003C5D33"><w:t>e</w:t></w:r><w:r><w:t>2 == "North":</w:t></w:r></w:p><w:p w14:paraId="4E4E81A1" w14:textId="77777777" w:rsidR="002974B2" w:rsidRDefault="002974B2" w:rsidP="002974B2"><w:pPr><w:spacing w:after="0"/></w:pPr><w:r><w:t xml:space="preserve">    result = "NORTH"</w:t></w:r></w:p><w:p w14:paraId="34CFD023" w14:textId="2AD7F9B7" w:rsidR="002974B2" w:rsidRDefault="002974B2" w:rsidP="002974B2"><w:pPr><w:spacing w:after="0"/></w:pPr><w:r><w:t xml:space="preserve">elif </w:t></w:r><w:r w:rsidR="003C5D33"><w:t>e</w:t></w:r><w:r><w:t>2 == "West":</w:t></w:r></w:p><w:p w14:paraId="23708F9B" w14:textId="77777777" w:rsidR="002974B2" w:rsidRDefault="002974B2" w:rsidP="002974B2"><w:pPr><w:spacing w:after="0"/></w:pPr><w:r><w:t xml:space="preserve">    result = "WEST"</w:t></w:r></w:p><w:p w14:paraId="3041EC53" w14:textId="50694BC1" w:rsidR="002974B2" w:rsidRDefault="002974B2" w:rsidP="002974B2"><w:pPr><w:spacing w:after="0"/></w:pPr><w:r><w:t xml:space="preserve">elif </w:t></w:r><w:r w:rsidR="003C5D33"><w:t>e</w:t></w:r><w:r><w:t>2 == "South":</w:t></w:r></w:p><w:p w14:paraId="6C13FCC6" w14:textId="77777777" w:rsidR="002974B2" w:rsidRDefault="002974B2" w:rsidP="002974B2"><w:pPr><w:spacing w:after="0"/></w:pPr><w:r><w:t xml:space="preserve">    result = "SOUTH"</w:t></w:r></w:p><w:p w14:paraId="55D522DA" w14:textId="0102D22E" w:rsidR="002974B2" w:rsidRDefault="002974B2" w:rsidP="002974B2"><w:pPr><w:spacing w:after="0"/></w:pPr><w:r><w:t xml:space="preserve">elif </w:t></w:r><w:r w:rsidR="003C5D33"><w:t>e</w:t></w:r><w:r><w:t>2 == "Houston":</w:t></w:r></w:p><w:p w14:paraId="6CA6E6D3" w14:textId="77777777" w:rsidR="002974B2" w:rsidRDefault="002974B2" w:rsidP="002974B2"><w:pPr><w:spacing w:after="0"/></w:pPr><w:r><w:t xml:space="preserve">    result = "COAST"</w:t></w:r></w:p><w:p w14:paraId="59F2207E" w14:textId="77777777" w:rsidR="002974B2" w:rsidRDefault="002974B2" w:rsidP="002974B2"><w:pPr><w:spacing w:after="0"/></w:pPr><w:r><w:t>else:</w:t></w:r></w:p><w:p w14:paraId="1EF51E71" w14:textId="38D554B8" w:rsidR="002974B2" w:rsidRPr="004C6FBD" w:rsidRDefault="002974B2" w:rsidP="002974B2"><w:r><w:t xml:space="preserve">    result = "NA"</w:t></w:r></w:p><w:p w14:paraId="4C7F7A10" w14:textId="03D084EA" w:rsidR="004C6FBD" w:rsidRDefault="00295065" w:rsidP="002145D4"><w:pPr><w:pStyle w:val="ListParagraph"/><w:numPr><w:ilvl w:val="0"/><w:numId w:val="1"/></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Column E will be the load – that value will be </w:t></w:r><w:r w:rsidR="002567A6"><w:t xml:space="preserve">HIGH, MED, LOW or NA.  This information will be extracted from column E of the input file. </w:t></w:r></w:p><w:p w14:paraId="66F03CCD" w14:textId="036517CC" w:rsidR="004C6FBD" w:rsidRDefault="002567A6" w:rsidP="002145D4"><w:pPr><w:pStyle w:val="ListParagraph"/><w:numPr><w:ilvl w:val="0"/><w:numId w:val="1"/></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Column F will be the Retail Energy Provider (i.e. REP1).   For the current input file this value will always be </w:t></w:r><w:r w:rsidR="00AC5ABE"><w:t>HUDSON</w:t></w:r><w:r><w:t xml:space="preserve">.   </w:t></w:r></w:p><w:p w14:paraId="7CF5331A" w14:textId="75070A7A" w:rsidR="002145D4" w:rsidRDefault="004C6FBD" w:rsidP="002145D4"><w:pPr><w:pStyle w:val="ListParagraph"/><w:numPr><w:ilvl w:val="0"/><w:numId w:val="1"/></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Column </w:t></w:r><w:r w:rsidR="002567A6"><w:t xml:space="preserve">G </w:t></w:r><w:r><w:t xml:space="preserve">will be the </w:t></w:r><w:r w:rsidR="002567A6"><w:t>Term</w:t></w:r><w:r><w:t xml:space="preserve">. </w:t></w:r><w:r w:rsidR="002567A6"><w:t xml:space="preserve"> This value will be </w:t></w:r><w:r w:rsidR="00E1296A"><w:t xml:space="preserve">extracted from </w:t></w:r><w:r><w:t xml:space="preserve">Column </w:t></w:r><w:r w:rsidR="00E1296A"><w:t xml:space="preserve">D of the input file.  The only values we are concerned about are 12, 24, </w:t></w:r><w:r w:rsidR="00727E99"><w:t xml:space="preserve">36, 48, and 60. </w:t></w:r><w:r><w:t xml:space="preserve"> </w:t></w:r><w:r w:rsidR="002145D4"><w:t xml:space="preserve"> </w:t></w:r></w:p><w:p w14:paraId="1653044F" w14:textId="461FECBD" w:rsidR="00DC1EFC" w:rsidRDefault="002E201A" w:rsidP="002145D4"><w:pPr><w:pStyle w:val="ListParagraph"/><w:numPr><w:ilvl w:val="0"/><w:numId w:val="1"/></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Column H will be the minimum megawatt hours (abbreviated as Min_MWh).  This value will always be hard coded at zero for the current input file. </w:t></w:r></w:p><w:p w14:paraId="44C18704" w14:textId="0F55D5C2" w:rsidR="002E201A" w:rsidRDefault="002E201A" w:rsidP="002E201A"><w:pPr><w:pStyle w:val="ListParagraph"/><w:numPr><w:ilvl w:val="0"/><w:numId w:val="1"/></w:numPr></w:pPr><w:r><w:t xml:space="preserve">Column I will be the </w:t></w:r><w:r w:rsidR="002948CD"><w:t>max</w:t></w:r><w:r><w:t>imum megawatt hours (abbreviated as M</w:t></w:r><w:r w:rsidR="002948CD"><w:t>ax</w:t></w:r><w:r><w:t xml:space="preserve">_MWh).  This value will always be hard coded at </w:t></w:r><w:r w:rsidR="002948CD"><w:t>1000</w:t></w:r><w:r><w:t xml:space="preserve"> for the current input file. </w:t></w:r></w:p><w:p w14:paraId="50FEB279" w14:textId="402A1B3B" w:rsidR="00FD1BF3" w:rsidRDefault="00FD1BF3" w:rsidP="002E201A"><w:pPr><w:pStyle w:val="ListParagraph"/><w:numPr><w:ilvl w:val="0"/><w:numId w:val="1"/></w:numPr></w:pPr><w:r><w:lastRenderedPageBreak/><w:t xml:space="preserve">Column J will be the Daily_No_Ruc.  This value </w:t></w:r></w:p><w:p w14:paraId="7676C070" w14:textId="77777777" w:rsidR="002E201A" w:rsidRDefault="002E201A" w:rsidP="002E201A"/><w:p w14:paraId="1055DEB9" w14:textId="77777777" w:rsidR="002E201A" w:rsidRDefault="002E201A" w:rsidP="002E201A"/><w:p w14:paraId="56ECCA2E" w14:textId="77777777" w:rsidR="002E201A" w:rsidRDefault="002E201A" w:rsidP="002E201A"/><w:p w14:paraId="27CDA48B" w14:textId="77777777" w:rsidR="002E201A" w:rsidRDefault="002E201A" w:rsidP="002E201A"/><w:p w14:paraId="5F52CCDC" w14:textId="77777777" w:rsidR="002E201A" w:rsidRDefault="002E201A" w:rsidP="002E201A"/><w:p w14:paraId="76FFA627" w14:textId="77777777" w:rsidR="002E201A" w:rsidRDefault="002E201A" w:rsidP="002E201A"/><w:p w14:paraId="41035670" w14:textId="77777777" w:rsidR="002E201A" w:rsidRDefault="002E201A" w:rsidP="002E201A"/><w:p w14:paraId="05DF9A4C" w14:textId="77777777" w:rsidR="002E201A" w:rsidRDefault="002E201A" w:rsidP="002E201A"/><w:p w14:paraId="1F0630F3" w14:textId="77777777" w:rsidR="002E201A" w:rsidRDefault="002E201A" w:rsidP="002E201A"/><w:p w14:paraId="052D64AF" w14:textId="77777777" w:rsidR="002E201A" w:rsidRDefault="002E201A" w:rsidP="002E201A"/><w:p w14:paraId="6E8DA4C1" w14:textId="77777777" w:rsidR="002E201A" w:rsidRDefault="002E201A" w:rsidP="002E201A"/><w:p w14:paraId="6C6383A8" w14:textId="77777777" w:rsidR="002E201A" w:rsidRDefault="002E201A" w:rsidP="002E201A"/><w:p w14:paraId="6CE35883" w14:textId="77777777" w:rsidR="002E201A" w:rsidRDefault="002E201A" w:rsidP="002E201A"/><w:p w14:paraId="484AA1C6" w14:textId="77777777" w:rsidR="002E201A" w:rsidRDefault="002E201A" w:rsidP="002E201A"/><w:p w14:paraId="259C29AB" w14:textId="159E13D1" w:rsidR="00FD1BF3" w:rsidRDefault="00FD1BF3" w:rsidP="00FD1BF3"><w:pPr><w:jc w:val="center"/></w:pPr><w:r><w:t>Template Formula</w:t></w:r><w:r w:rsidR="00933102"><w:t xml:space="preserve"> Translations for Master Table Columns from Input File</w:t></w:r></w:p><w:p w14:paraId="4BFACA4B" w14:textId="4B53F3CE" w:rsidR="002E201A" w:rsidRDefault="00FD1BF3" w:rsidP="002E201A"><w:r w:rsidRPr="00933102"><w:rPr><w:u w:val="single"/></w:rPr><w:t>Column G</w:t></w:r><w:r w:rsidR="00933102"><w:t>: T</w:t></w:r><w:r w:rsidR="002E201A"><w:t>erm code formula translation</w:t></w:r><w:r w:rsidR="00933102"><w:t xml:space="preserve"> </w:t></w:r><w:r w:rsidR="002E201A" w:rsidRPr="00AC5ABE"><w:t>=IF(O2=1,6,IF(O2=2,12,IF(O2=3,18,IF(O2=4,24,IF(O2=5,30,IF(O2=6,36,IF(O2=7,48,IF(O2=8,60))))))))</w:t></w:r></w:p><w:p w14:paraId="63EE5E6A" w14:textId="13C08057" w:rsidR="00933102" w:rsidRDefault="00933102" w:rsidP="002E201A"><w:r w:rsidRPr="00AA6706"><w:rPr><w:u w:val="single"/></w:rPr><w:t xml:space="preserve">Column </w:t></w:r><w:r w:rsidR="00AA6706" w:rsidRPr="00AA6706"><w:rPr><w:u w:val="single"/></w:rPr><w:t>J</w:t></w:r><w:r w:rsidR="00AA6706"><w:t>: Daily_No_Ruc formula translation</w:t></w:r></w:p><w:p w14:paraId="20F2E7DB" w14:textId="2D628CED" w:rsidR="00A5708C" w:rsidRDefault="00A5708C" w:rsidP="002E201A"><w:r w:rsidRPr="00A5708C"><w:t>=IFNA(S3*R3,0)</w:t></w:r></w:p><w:p w14:paraId="4AE96902" w14:textId="14331042" w:rsidR="00CC3FED" w:rsidRDefault="00CC3FED" w:rsidP="002E201A"><w:r><w:t>In the formula above, column R is always hard coded at 10.</w:t></w:r></w:p><w:p w14:paraId="0862B070" w14:textId="6DDE316B" w:rsidR="00CC3FED" w:rsidRDefault="00CC3FED" w:rsidP="002E201A"><w:r><w:t xml:space="preserve">The formula for column S is below and it </w:t></w:r><w:r w:rsidR="005473CF"><w:t>has a custom format</w:t></w:r><w:r><w:t>:</w:t></w:r></w:p><w:p w14:paraId="7D1C4E18" w14:textId="614E5F00" w:rsidR="00A5708C" w:rsidRDefault="00A5708C" w:rsidP="002E201A"><w:r w:rsidRPr="00A5708C"><w:t>=IF(Q3=6,E3,IF(Q3=12,F3,IF(Q3=18,G3,IF(Q3=24,H3,IF(Q3=30,I3,IF(Q3=36,J3,IF(Q3=48,K3,L3)))))))</w:t></w:r></w:p><w:sectPr w:rsidR="00A5708C"><w:pgSz w:w="12240" w:h="15840"/><w:pgMar w:top="1440" w:right="1440" w:bottom="1440" w:left="1440" w:header="720" w:footer="720" w:gutter="0"/><w:cols w:space="720"/><w:docGrid w:linePitch="360"/></w:sectPr></w:body></w:document>